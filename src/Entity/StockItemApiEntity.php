<?php

/**
 * !!! AUTOGENERATED FROM OPENAPI SPECIFICATION
 * !!! DON'T EDIT AND DON'T SEND PULL REQUESTS DIRECTLY FOR THIS FILE
 */

declare(strict_types=1);

namespace Simplia\Api\Entity;

use Simplia\Api\FieldConfig\StockItemApiFieldConfig;

class StockItemApiEntity extends AbstractApiEntity {
    public function getId(): int {
        return $this->returnField('id');
    }

    public function getTrackingId(): string {
        return $this->returnField('tracking_id');
    }

    public function getCode(): string {
        return $this->returnField('code');
    }

    public function getCodeSupplier(): ?string {
        return $this->returnField('code_supplier');
    }

    public function getEan(): ?string {
        return $this->returnField('ean');
    }

    public function getFullPrice(): float {
        return $this->returnField('full_price');
    }

    public function getOriginalPrice(): float {
        return $this->returnField('original_price');
    }

    public function getAccountingValue(): string {
        return $this->returnField('accounting_value');
    }

    public function getDiscountPercentage(): ?float {
        return $this->returnField('discount_percentage');
    }

    public function getDiscountValue(): ?float {
        return $this->returnField('discount_value');
    }

    public function getDiscountValidFrom(): ?string {
        return $this->returnField('discount_valid_from');
    }

    public function getDiscountValidTo(): ?string {
        return $this->returnField('discount_valid_to');
    }

    public function getTotalStockAmount(): int {
        return $this->returnField('total_stock_amount');
    }

    public function getTotalReservedStockAmount(): int {
        return $this->returnField('total_reserved_stock_amount');
    }

    public function getTotalBlockedStockAmount(): int {
        return $this->returnField('total_blocked_stock_amount');
    }

    public function getAvailabilityHours(): int {
        return $this->returnField('availability_hours');
    }

    public function getAvailabilityDate(): ?string {
        return $this->returnField('availability_date');
    }

    public function isDemandable(): bool {
        return $this->returnField('demandable');
    }

    public function getName(): string {
        return $this->returnField('name');
    }

    /**
     * @return StockStorageLocationApiEntity[]
     */
    public function getStorageLocations(): array {
        return $this->returnFieldArray('storage_locations', StockStorageLocationApiEntity::class);
    }

    public function getProduct(): ProductApiEntity {
        return $this->returnField('product', ProductApiEntity::class);
    }

    public function getVariant(): ?VariantApiEntity {
        return $this->returnField('variant', VariantApiEntity::class);
    }

    /**
     * @return BundlePartApiEntity[]
     */
    public function getBundleParts(): array {
        return $this->returnFieldArray('bundle_parts', BundlePartApiEntity::class);
    }

    /**
     * @return StockItemAmountApiEntity[]
     */
    public function getStockAmounts(): array {
        return $this->returnFieldArray('stock_amounts', StockItemAmountApiEntity::class);
    }

    public function getFirstPurchase(): ?string {
        return $this->returnField('first_purchase');
    }

    public function getLastPurchase(): ?string {
        return $this->returnField('last_purchase');
    }

    public function getLastSale(): ?string {
        return $this->returnField('last_sale');
    }

    final public static function createFieldConfig(): StockItemApiFieldConfig {
        return new StockItemApiFieldConfig();
    }
}
