<?php

/**
 * !!! AUTOGENERATED FROM OPENAPI SPECIFICATION
 * !!! DON'T EDIT AND DON'T SEND PULL REQUESTS DIRECTLY FOR THIS FILE
 */

declare(strict_types=1);

namespace Simplia\Api\Endpoint;

use Generator;
use Simplia\Api\Entity\UserApiEntity;
use Simplia\Api\FieldConfig\UserApiFieldConfig;
use Simplia\Api\Input\UserApiInput;
use Simplia\Api\Request\UserApiRequest;

class UsersApiEndpoint extends AbstractApiEndpoint {
    /**
     * List users
     * @param UserApiRequest $request
     * @param UserApiFieldConfig $fields
     * @param int $batchSize
     * @return Generator|UserApiEntity[]
     */
    final public function iterate(UserApiRequest $request, UserApiFieldConfig $fields, int $batchSize = 100): Generator {
        foreach ($this->iterateList('users', [], $request, $fields, $batchSize) as $row) {
            yield new UserApiEntity($row);
        }
        yield from [];
    }

    /**
     * Get single user
     */
    final public function get(int $id, UserApiFieldConfig $fields): ?UserApiEntity {
        $result = $this->singleResult('users/' . $id, [], $fields);

        return $result ? new UserApiEntity($result) : null;
    }

    /**
     * Update user (patch)
     */
    final public function update(int $id, UserApiInput $input, ?UserApiFieldConfig $fields = null): UserApiEntity {
        $result = $this->request('PATCH', 'users/' . $id, [], $input, $fields);

        return new UserApiEntity($result);
    }
}
