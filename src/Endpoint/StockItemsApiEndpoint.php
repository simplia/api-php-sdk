<?php

/**
 * !!! AUTOGENERATED FROM OPENAPI SPECIFICATION
 * !!! DON'T EDIT AND DON'T SEND PULL REQUESTS DIRECTLY FOR THIS FILE
 */

declare(strict_types=1);

namespace Simplia\Api\Endpoint;

use Generator;
use Simplia\Api\Entity\DocumentApiEntity;
use Simplia\Api\Entity\StockItemApiEntity;
use Simplia\Api\FieldConfig\DocumentApiFieldConfig;
use Simplia\Api\FieldConfig\StockItemApiFieldConfig;
use Simplia\Api\Input\StockItemBatchTypeApiInput;
use Simplia\Api\Input\StockItemLocationTypeApiInput;
use Simplia\Api\Input\StockItemStockAmountBatchTypeApiInput;
use Simplia\Api\Request\StockItemApiRequest;

class StockItemsApiEndpoint extends AbstractApiEndpoint {
    /**
     * List stock items
     * @param StockItemApiRequest $request
     * @param StockItemApiFieldConfig $fields
     * @param int $batchSize
     * @return Generator|StockItemApiEntity[]
     */
    final public function iterate(
        StockItemApiRequest $request,
        StockItemApiFieldConfig $fields,
        int $batchSize = 100
    ): Generator {
        foreach ($this->iterateList('stock-items', [], $request, $fields, $batchSize) as $row) {
            yield new StockItemApiEntity($row);
        }
        yield from [];
    }

    /**
     * Get single stock item
     */
    final public function get(int $id, StockItemApiFieldConfig $fields): ?StockItemApiEntity {
        $result = $this->singleResult('stock-items/' . $id, [], $fields);

        return $result ? new StockItemApiEntity($result) : null;
    }

    /**
     * Update stock items
     *
     * return StockItemApiEntity[]
     */
    final public function batchUpdate(StockItemBatchTypeApiInput $input, ?StockItemApiFieldConfig $fields = null): array {
        $result = $this->request('PUT', 'stock-items/batch', [], $input, $fields);

        return array_map(static fn(array $row) => new StockItemApiEntity($row), $result);
    }

    /**
     * Update storage location
     */
    final public function updateLocation(
        int $id,
        int $stockRoom,
        StockItemLocationTypeApiInput $input,
        ?StockItemApiFieldConfig $fields = null
    ): StockItemApiEntity {
        $result = $this->request('PUT', 'stock-items/' . $id . '/location/' . $stockRoom, [], $input, $fields);

        return new StockItemApiEntity($result);
    }

    /**
     * Update stock amount of stock items
     *
     * return DocumentApiEntity[]
     */
    final public function batchUpdateStockAmount(
        int $stockRoom,
        StockItemStockAmountBatchTypeApiInput $input,
        ?DocumentApiFieldConfig $fields = null
    ): array {
        $result = $this->request('PUT', 'stock-items/stock-amount/batch/' . $stockRoom, [], $input, $fields);

        return array_map(static fn(array $row) => new DocumentApiEntity($row), $result);
    }
}
