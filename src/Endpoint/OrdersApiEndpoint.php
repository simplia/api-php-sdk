<?php

/**
 * !!! AUTOGENERATED FROM OPENAPI SPECIFICATION
 * !!! DON'T EDIT AND DON'T SEND PULL REQUESTS DIRECTLY FOR THIS FILE
 */

declare(strict_types=1);

namespace Simplia\Api\Endpoint;

use Generator;
use Simplia\Api\Entity\OrderApiEntity;
use Simplia\Api\FieldConfig\OrderApiFieldConfig;
use Simplia\Api\Input\OrderCreateTypeApiInput;
use Simplia\Api\Input\OrderStatusTypeApiInput;
use Simplia\Api\Request\OrderApiRequest;

class OrdersApiEndpoint extends AbstractApiEndpoint {
    /**
     * List orders
     * @param string $email
     * @param string $phone
     * @param OrderApiRequest $request
     * @param OrderApiFieldConfig $fields
     * @param int $batchSize
     * @return Generator|OrderApiEntity[]
     */
    final public function iterate(
        string $email,
        string $phone,
        OrderApiRequest $request,
        OrderApiFieldConfig $fields,
        int $batchSize = 100
    ): Generator {
        $query = [];
        $query['email'] = $email;
        $query['phone'] = $phone;
        foreach ($this->iterateList('orders', $query, $request, $fields, $batchSize) as $row) {
            yield new OrderApiEntity($row);
        }
        yield from [];
    }

    /**
     * Create new order
     */
    final public function create(OrderCreateTypeApiInput $input, ?OrderApiFieldConfig $fields = null): OrderApiEntity {
        $result = $this->request('POST', 'orders', [], $input, $fields);

        return new OrderApiEntity($result);
    }

    /**
     * Get single order by code
     */
    final public function get(string $id, OrderApiFieldConfig $fields): ?OrderApiEntity {
        $result = $this->singleResult('orders/' . $id, [], $fields);

        return $result ? new OrderApiEntity($result) : null;
    }

    /**
     * Change order status
     */
    final public function updateStatus(
        string $id,
        OrderStatusTypeApiInput $input,
        ?OrderApiFieldConfig $fields = null
    ): OrderApiEntity {
        $result = $this->request('PUT', 'orders/' . $id . '/status', [], $input, $fields);

        return new OrderApiEntity($result);
    }
}
