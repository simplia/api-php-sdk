<?php

/**
 * !!! AUTOGENERATED FROM OPENAPI SPECIFICATION
 * !!! DON'T EDIT AND DON'T SEND PULL REQUESTS DIRECTLY FOR THIS FILE
 */

declare(strict_types=1);

namespace Simplia\Api\Endpoint;

use Generator;
use Simplia\Api\Entity\StockItemApiEntity;
use Simplia\Api\FieldConfig\StockItemFieldConfig;
use Simplia\Api\Input\StockItemBatchTypeInput;
use Simplia\Api\Request\StockItemRequest;

class StockItemsEndpoint extends AbstractEndpoint {
    /**
     * List stock items
     * @param StockItemRequest $request
     * @param StockItemFieldConfig $fields
     * @param int $batchSize
     * @return Generator|StockItemApiEntity[]
     */
    final public function iterate(
        StockItemRequest $request,
        StockItemFieldConfig $fields,
        int $batchSize = 100
    ): Generator {
        foreach ($this->iterateList('stock-items', [], $request, $fields, $batchSize) as $row) {
            yield new StockItemApiEntity($row);
        }
        yield from [];
    }

    /**
     * Get single stock item
     */
    final public function get(int $id, StockItemFieldConfig $fields): ?StockItemApiEntity {
        $result = $this->singleResult('stock-items/' . $id, [], $fields);

        return $result ? new StockItemApiEntity($result) : null;
    }

    /**
     * Update stock items
     *
     * return StockItemApiEntity[]
     */
    final public function batchUpdate(StockItemBatchTypeInput $input, ?StockItemFieldConfig $fields = null): array {
        $result = $this->request('put', 'stock-items/batch', [], $input, $fields);

        return array_map(static fn(array $row) => new StockItemApiEntity($row), $result);
    }
}
