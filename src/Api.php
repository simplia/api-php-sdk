<?php

/**
 * !!! AUTOGENERATED FROM OPENAPI SPECIFICATION
 * !!! DON'T EDIT AND DON'T SEND PULL REQUESTS DIRECTLY FOR THIS FILE
 */

namespace Simplia\Api;

use Psr\Http\Client\ClientInterface;
use Simplia\Api\Endpoint\ArticlesApiEndpoint;
use Simplia\Api\Endpoint\AvailabilitiesApiEndpoint;
use Simplia\Api\Endpoint\BundleApiEndpoint;
use Simplia\Api\Endpoint\DocumentsApiEndpoint;
use Simplia\Api\Endpoint\EmailApiEndpoint;
use Simplia\Api\Endpoint\OrdersApiEndpoint;
use Simplia\Api\Endpoint\PackagesApiEndpoint;
use Simplia\Api\Endpoint\PaymentMethodApiEndpoint;
use Simplia\Api\Endpoint\PaymentsApiEndpoint;
use Simplia\Api\Endpoint\ProductsApiEndpoint;
use Simplia\Api\Endpoint\StockItemsApiEndpoint;
use Simplia\Api\Endpoint\StockRoomsApiEndpoint;
use Simplia\Api\Endpoint\TextPagesApiEndpoint;
use Simplia\Api\Endpoint\TransportMethodApiEndpoint;
use Simplia\Api\Endpoint\VariantsApiEndpoint;
use Simplia\Api\Endpoint\VoucherApiEndpoint;
use Simplia\Api\Endpoint\VoucherLockApiEndpoint;

final class Api {
    public RequestHandler $client;

    private function __construct(ClientInterface $client, string $host, string $auth) {
        $this->client = new RequestHandler($client, $host, $auth);
    }

    public static function withUsernameAuth(
        ClientInterface $client,
        string $hostname,
        string $username,
        string $password
    ): self {
        $auth = 'Basic ' . base64_encode($username . ':' . $password);

        return new self($client, $hostname, $auth);
    }

    public static function withJWT(ClientInterface $client, string $hostname, string $JWT): self {
        $auth = 'Bearer ' . base64_encode($JWT);

        return new self($client, $hostname, $auth);
    }

    final public function getArticlesEndpoint(): ArticlesApiEndpoint {
        return new ArticlesApiEndpoint($this->client);
    }

    final public function getAvailabilitiesEndpoint(): AvailabilitiesApiEndpoint {
        return new AvailabilitiesApiEndpoint($this->client);
    }

    final public function getBundleEndpoint(): BundleApiEndpoint {
        return new BundleApiEndpoint($this->client);
    }

    final public function getDocumentsEndpoint(): DocumentsApiEndpoint {
        return new DocumentsApiEndpoint($this->client);
    }

    final public function getEmailEndpoint(): EmailApiEndpoint {
        return new EmailApiEndpoint($this->client);
    }

    final public function getOrdersEndpoint(): OrdersApiEndpoint {
        return new OrdersApiEndpoint($this->client);
    }

    final public function getPackagesEndpoint(): PackagesApiEndpoint {
        return new PackagesApiEndpoint($this->client);
    }

    final public function getPaymentMethodEndpoint(): PaymentMethodApiEndpoint {
        return new PaymentMethodApiEndpoint($this->client);
    }

    final public function getPaymentsEndpoint(): PaymentsApiEndpoint {
        return new PaymentsApiEndpoint($this->client);
    }

    final public function getProductsEndpoint(): ProductsApiEndpoint {
        return new ProductsApiEndpoint($this->client);
    }

    final public function getStockItemsEndpoint(): StockItemsApiEndpoint {
        return new StockItemsApiEndpoint($this->client);
    }

    final public function getStockRoomsEndpoint(): StockRoomsApiEndpoint {
        return new StockRoomsApiEndpoint($this->client);
    }

    final public function getTextPagesEndpoint(): TextPagesApiEndpoint {
        return new TextPagesApiEndpoint($this->client);
    }

    final public function getTransportMethodEndpoint(): TransportMethodApiEndpoint {
        return new TransportMethodApiEndpoint($this->client);
    }

    final public function getVariantsEndpoint(): VariantsApiEndpoint {
        return new VariantsApiEndpoint($this->client);
    }

    final public function getVoucherEndpoint(): VoucherApiEndpoint {
        return new VoucherApiEndpoint($this->client);
    }

    final public function getVoucherLockEndpoint(): VoucherLockApiEndpoint {
        return new VoucherLockApiEndpoint($this->client);
    }
}
